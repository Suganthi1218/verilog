1. What is the value of y in the below snippet?

reg [2:0] a, b;
reg y;
initial
begin
a= 3'd5;
b= 3,b111
y = a&&b;
end

Ans :
   y=1;



2. What is the value of x in the below snippet?

reg [2:0] a, b;
reg [2:0]x;
initial
begin
a=3'd5;
b=3'b111;
x= a | b;
end

Ans:
   x=111;

3. What is the value of x in the below snippet?

reg [2:0]a;
reg [2:0]x;
initial
begin
x = ^a;
a = 3'd4;
end

Ans: 
 //x = xxx;


4. Evaluate the value of x in the below snippet.

reg [3:0]a;

reg [1:0]x;
initial
begin
a = 4d10;
X= (a>>1);
end

Ans :
   x=0101;

5. Find the value of b in the below snippet.

reg [3:0]a;
reg [6:0]b;
initial
begin
a=4'd10;
b={a,1};
end

Ans :
  b=0010101;


6. Which block executes in the below snippet and justify the
reason:
reg [3:0]a= 4'b110x;
initial
begin
if (a== 4'b1100)
begin: B1
end
else
begin: B2 end
end

Ans :
 B2

7. Which block executes in the below snippet and justify the
reason.
reg [3:0]a= 4'b110x;
initial
begin
if ( a !== 4'b1100)
begin: B1
end
else
begin: B2 end
end

Ans :
 B1


8. What is the value of y in the below expression and justify the
reason.

reg [3:0]a= 4'b110x;
wire y = (a== 4'b1100)?1'b1:1'b0;

Ans :
  y = 1'b0;


9. What is the value of y in the below expression and justify the
reason.

reg [3:0]a= 4'b010x;
wire y = (a== 4'b1100)?1'b1:1'b0;

Ans :
  y = 1'b0;



10. What is the value of b in the below expression and justify the
reason.

reg [3:0]a= 4'b0100;
reg [3:0]b;
initial
begin
b = a+1'bx;
end

Ans :
//  y = xxxx;

11. Design a 4 bit ALU circuit to perform arithmetic and logic operations. Based on sel signal output will be assigned.
If sel =3'b000 =>addition
3'b001 =>subtraction
3'b010 =>division
3'b011 =>logical and
3'b100 =>bitwise and
3'b101 =>bitwise or
3'b110 =>bitwise nand
3'b111 =>bitwise xnor

Ans :

module ALU_4bit(input reg[3:0] a,b, 
                               input reg[2:0] sel,
                               output reg[3:0] y);

always @(sel)begin

case(sel)
      3'b000  : y = a + b;
      3'b001  : y = a - b;
      3'b010  : y = a / b;
      3'b011  : y = a && b;
      3'b100  : y = a & b;
      3'b101  : y = a |b;
      3'b110  : y = ~(a &b);
      3'b111  : y = ~(a ^ b);
     default : y =4'b0;
endcase
end 
endmodule 	 	 	
     








  
